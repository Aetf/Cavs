ADD_SUBDIRECTORY(proto)
ADD_SUBDIRECTORY(util)
ADD_SUBDIRECTORY(frontend)
ADD_SUBDIRECTORY(midend)
ADD_SUBDIRECTORY(backend)

IF(TRUE)
  MESSAGE(STATUS ${cxx_srcs}       "[CXX]")
  MESSAGE(STATUS ${cuda_srcs}      "[CUDA]")
  MESSAGE(STATUS ${test_cxx_srcs}  "[CXX TEST]")
  MESSAGE(STATUS ${test_cuda_srcs} "[CUDA TEST]")
ENDIF()

ADD_LIBRARY(cavs_cxx ${cxx_srcs} ${cuda_srcs} $<TARGET_OBJECTS:proto_def>)
TARGET_LINK_LIBRARIES(cavs_cxx ${EXTERNAL_LIBS})

MESSAGE(STATUS ${test_cxx_srcs} "[TEST]")
FOREACH(f ${test_cxx_srcs})
  MESSAGE(STATUS ${f} "[For Each CXX]")
  GET_FILENAME_COMPONENT(f_name ${f} NAME_WE)
  ADD_EXECUTABLE(${f_name} "${f}")
  TARGET_LINK_LIBRARIES(${f_name} "-Wl,--whole-archive" cavs_cxx "-Wl,--no-whole-archive" ${EXTERNAL_LIBS})
ENDFOREACH()

FOREACH(f ${test_cuda_srcs})
  MESSAGE(STATUS ${f} "[For Each CUDA]")
  GET_FILENAME_COMPONENT(f_name ${f} NAME_WE)
  ADD_EXECUTABLE(${f_name} "${f}")
  TARGET_LINK_LIBRARIES(${f_name} "-Wl,--whole-archive" cavs_cxx "-Wl,--no-whole-archive" ${EXTERNAL_LIBS})
ENDFOREACH()
