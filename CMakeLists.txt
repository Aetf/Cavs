CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(Cavs)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(BEFORE ${PROJECT_BINARY_DIR})

FIND_PACKAGE(MPI REQUIRED)
IF(MPI_CXX_FOUND)
  MESSAGE(STATUS "MPI compiler found:" ${MPI_CXX_COMPILER})
  MESSAGE(STATUS "MPI compile flags: " ${MPI_CXX_COMPILE_FLAGS})
  MESSAGE(STATUS "MPI include path: " ${MPI_CXX_INCLUDE_PATH})
  MESSAGE(STATUS "MPI LINK flags: " ${MPI_CXX_LINK_FLAGS})
  MESSAGE(STATUS "MPI libraries: " ${MPI_CXX_LIBRARIES})
  INCLUDE_DIRECTORIES(SYSTEM ${MPI_CXX_INCLUDE_PATH})
ENDIF()

FIND_PACKAGE(CUDA 8.0 REQUIRED)
IF(CUDA_FOUND)
  MESSAGE(STATUS "CUDA version:" ${CUDA_VERSION})
  MESSAGE(STATUS "CUDA toolkit root dir:" ${CUDA_TOOLKIT_ROOT_DIR})
  MESSAGE(STATUS "CUDA include dir:" ${CUDA_INCLUDE_DIRS})
  MESSAGE(STATUS "CUDA librares:" ${CUDA_LIBRARIES})
  MESSAGE(STATUS "CUDA cublas librares:" ${CUDA_CUBLAS_LIBRARIES})
  INCLUDE_DIRECTORIES(SYSTEM ${CUDA_INCLUDE_DIRS})
  SET(CUDA_PROPAGATE_HOST_FLAGS OFF)
  #hard-code the gpu arch spec
  LIST(APPEND CUDA_NVCC_FLAGS "-gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52")
  LIST(APPEND CUDA_NVCC_FLAGS "-std=c++11")
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH, "${PROJECT_SOURCE_DIR/bin}")
SET(LIBRARY_OUTPUT_PATH, "${PROJECT_SOURCE_DIR/lib}")
ADD_SUBDIRECTORY(cavs)
#add_subdirectory(apps)
